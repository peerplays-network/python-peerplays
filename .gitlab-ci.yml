workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

include:
  - template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml
  - template: Jobs/License-Scanning.latest.gitlab-ci.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml
  - template: Jobs/Secret-Detection.latest.gitlab-ci.yml

stages:
  - test

test:
  stage: test
  script:
    - lsb_release -a
    - python3 --version
    - sudo apt-get update -qy
      # - sudo apt-get install -y python3-dev python3-pip
    - sudo apt-get install -y python3-dev build-essential libssl-dev libffi-dev libxml2-dev libxslt1-dev zlib1g-dev python3-pip
      # - sudo apt-get -y  install autoconf bash build-essential ca-certificates cmake dnsutils doxygen git graphviz libbz2-dev libcurl4-openssl-dev libncurses-dev libreadline-dev libssl-dev libtool libzmq3-dev locales ntp pkg-config wget autotools-dev libicu-dev python-dev
        # build-essential   
    - pip3 install -r requirements.txt
    - pip3 install -r requirements-test.txt
    - tox
  tags:
    - testing
      #    - python3 -m unittest tests/test_nft.py 
      #    - python3 -m unittest tests/test_market_place.py 
      #    - python3 -m unittest tests/test_hrp.py 

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
sonarcloud-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - branches

